-- CREATE TABLE PING
-- (
--   Column1 VARCHAR2(255) NOT NULL
-- );

-- -- create a row
-- INSERT INTO PING (Column1) VALUES ('PONG');

-- create a TABLE INSERT INTO USERS (FIRST_NAME, LAST_NAME, DOB, ADDRESS, MOBILE, CITY_CODE, EMAIL, PASSWORD) VALUES (:firstName, :lastName, :dob, :address, :mobile, :cityCode, :email, :password)
-- drop foreign keys

-- drop the table
-- Drop a table
-- Drop a table


CREATE TABLE USERS (
    ID VARCHAR2(36) PRIMARY KEY,
    FIRST_NAME VARCHAR2(255) NOT NULL,
    LAST_NAME VARCHAR2(255) NOT NULL,
    DOB DATE NOT NULL,
    ADDRESS VARCHAR2(255) NOT NULL,
    MOBILE VARCHAR2(255) NOT NULL,
    CITY_CODE VARCHAR2(255) NOT NULL,
    EMAIL VARCHAR2(255) NOT NULL,
    PASSWORD VARCHAR2(255) NOT NULL,
    TYPE VARCHAR2(255) DEFAULT 'USER' NOT NULL, -- USER, ADMIN
    PROFILE_IMAGE VARCHAR2(255) DEFAULT 'https://placehold.co/600x400'
);

SELECT
    *
FROM
    USERS;

-- -- CREATE A ADMIN
-- INSERT INTO USERS (
--     ID,
--     FIRST_NAME,
--     LAST_NAME,
--     DOB,
--     ADDRESS,
--     MOBILE,
--     CITY_CODE,
--     EMAIL,
--     PASSWORD,
--     TYPE
-- ) VALUES (
--     1,
--     'ADMIN',
--     'ADMIN',
--     '01-JAN-1990',
--     'ADMIN',
--     'ADMIN',
--     'ADMIN',
--     'ADMIN',
--     'ADMIN',
--     'ADMIN'
-- );



CREATE TABLE CHEF (
    ID VARCHAR2(36) PRIMARY KEY,
    USER_ID VARCHAR2(36) NOT NULL,
    SPECIALITY VARCHAR2(100) NOT NULL,
    RATING NUMBER DEFAULT 0,
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

SELECT
    *
FROM
    CHEF;

CREATE TABLE CERTIFICATION (
    ID VARCHAR2(36) PRIMARY KEY,
    CHEF_ID VARCHAR2(36) NOT NULL,
    CERTIFICATION VARCHAR2(100) NOT NULL,
    ISSUE_DATE VARCHAR2(10) NOT NULL,
    EXPIRY_DATE VARCHAR2(10) NOT NULL,
    LINK VARCHAR2(100) NOT NULL,
    FOREIGN KEY (CHEF_ID) REFERENCES CHEF(ID),
    CERTIFICATE_IMAGE VARCHAR2(255) DEFAULT 'https://placehold.co/600x400'
);

CREATE TABLE KITCHEN (
    ID VARCHAR2(36) PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    ADDRESS VARCHAR2(100) NOT NULL,
    RATING NUMBER DEFAULT 0,
    CITY_NAME VARCHAR2(100) NOT NULL,
    CHEF_ID VARCHAR2(36) NOT NULL,
    APPROVED NUMBER(1) NOT NULL CHECK (APPROVED IN (0, 1)),
    FOREIGN KEY (CHEF_ID) REFERENCES CHEF(ID),
    KITCHEN_IMAGE VARCHAR2(255) DEFAULT 'https://placehold.co/600x400'
);

CREATE TABLE FOOD (
    ID VARCHAR2(36) PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    PRICE NUMBER NOT NULL,
    RATING NUMBER NOT NULL,
    KITCHEN_ID VARCHAR2(36) NOT NULL,
    FOREIGN KEY (KITCHEN_ID) REFERENCES KITCHEN(ID),
    FOOD_IMAGE VARCHAR2(255) DEFAULT 'https://placehold.co/600x400'
);

CREATE TABLE INGREDIENT (
    ID VARCHAR2(36) PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    QUANTITY NUMBER NOT NULL,
    FOOD_ID VARCHAR2(36) NOT NULL,
    FOREIGN KEY (FOOD_ID) REFERENCES FOOD(ID),
    INGREDIENT_IMAGE VARCHAR2(255) DEFAULT 'https://placehold.co/600x400'
);

SELECT
    *
FROM
    USERS;

-- add a field on users named profile image, which will be referenced to a imageTable
-- create a imageTable

--Create a new Sequence

CREATE SEQUENCE SEQUENCE1
             START WITH 1 CACHE 200;

CREATE OR REPLACE TRIGGER TRIGGER1 BEFORE
    INSERT ON USERS FOR EACH ROW
BEGIN
    :NEW.ID := 'U'
               || SEQUENCE1.NEXTVAL;
END;
/

CREATE SEQUENCE SEQUENCE2
             START WITH 1 CACHE 200;

CREATE OR REPLACE TRIGGER TRIGGER2 BEFORE
    INSERT ON CHEF FOR EACH ROW
BEGIN
    :NEW.ID := 'C'
               || SEQUENCE2.NEXTVAL;
END;
/

CREATE SEQUENCE SEQUENCE3
             START WITH 1 CACHE 200;

CREATE OR REPLACE TRIGGER TRIGGER3 BEFORE
    INSERT ON CERTIFICATION FOR EACH ROW
BEGIN
    :NEW.ID := 'CER'
               || SEQUENCE3.NEXTVAL;
END;

CREATE SEQUENCE SEQUENCE4
             START WITH 1 CACHE 200;

CREATE OR REPLACE TRIGGER TRIGGER4 BEFORE
    INSERT ON KITCHEN FOR EACH ROW
BEGIN
    :NEW.ID := 'K'
               || SEQUENCE4.NEXTVAL;
END;

CREATE SEQUENCE SEQUENCE5
             START WITH 1 CACHE 200;

CREATE OR REPLACE TRIGGER TRIGGER5 BEFORE
    INSERT ON FOOD FOR EACH ROW
BEGIN
    :NEW.ID := 'F'
               || SEQUENCE5.NEXTVAL;
END;

CREATE SEQUENCE SEQUENCE6
             START WITH 1 CACHE 200;

CREATE OR REPLACE TRIGGER TRIGGER6 BEFORE
    INSERT ON INGREDIENT FOR EACH ROW
BEGIN
    :NEW.ID := 'I'
               || SEQUENCE6.NEXTVAL;
END;



-- add a field on users named profile image, which will be referenced to a imageTable


-- delete all the tables sequentially
-- DROP TABLE INGREDIENT;

-- DROP TABLE FOOD;

-- DROP TABLE KITCHEN;

-- DROP TABLE CERTIFICATION;

-- DROP TABLE CHEF;

-- DROP TABLE USERS;